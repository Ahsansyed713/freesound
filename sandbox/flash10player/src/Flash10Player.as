package  {    import flash.display.Sprite;    import flash.events.Event;    import flash.events.IOErrorEvent;    import flash.events.MouseEvent;    import flash.events.ProgressEvent;    import flash.media.Sound;    import flash.net.URLRequest;        /**     * @author bram     */    [SWF( backgroundColor='0xffffff', width='900', height='200')]    public class Flash10Player extends Sprite     {        private var _soundDisplay : SoundDisplay;        private var _baseUrl : String, _waveformUrl : String, _spectralUrl : String, _soundUrl : String;        private var _sound : BasicSoundManager;        public function Flash10Player()        {            _baseUrl = "../media/";            _waveformUrl = "waveform.png";            _spectralUrl = "spectral.jpg";            _soundUrl = "preview.mp3";        	            buildUi();            addEventListener(MouseEvent.CLICK, loadAndPlay);        }        private function buildUi() : void        {            _soundDisplay = new SoundDisplay(900, 149, _baseUrl + _waveformUrl, _baseUrl + _spectralUrl);            _soundDisplay.x = 5;            _soundDisplay.y = 5;            addChild(_soundDisplay);        }        private function loadAndPlay(e : MouseEvent) : void        {        	if (!_sound)        	{	            _sound = new BasicSoundManager(_baseUrl + _soundUrl);	        		            _sound.addEventListener(SoundManagerEvent.LOADING_PROGRESS_EVENT, onLoadingProgress);	            _sound.addEventListener(SoundManagerEvent.LOADING_COMPLETE_EVENT, onLoadingProgress);	            _sound.addEventListener(SoundManagerEvent.PLAY_EVENT, onPlay);	            _sound.addEventListener(SoundManagerEvent.PLAYING_PROGRESS_EVENT, onPlayingProgress);	            _sound.addEventListener(SoundManagerEvent.PAUSE_EVENT, onPause);	            _sound.addEventListener(SoundManagerEvent.STOP_EVENT, onStop);        	}        	        	if (_sound.playing)        	{        		_sound.stop();        	}        	else        	{        		_sound.loop = true;            	_sound.play();        	}        }        private function onLoadingProgress(e : SoundManagerEvent) : void        {            _soundDisplay.setLoading(e.procent);        }        private function onPlayingProgress(e : SoundManagerEvent) : void        {            trace("onPlayingProgress");            _soundDisplay.setPlaying(e.procent);        }        private function onPlay(e : SoundManagerEvent) : void        {            trace("onPlay");            // toggle button        }        private function onStop(e : SoundManagerEvent) : void        {            // ?            trace("onStop");        }        private function onPause(e : SoundManagerEvent) : void        {            trace("onPause");            // toggle button        }    }}