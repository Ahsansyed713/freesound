package  {    import flash.display.Sprite;    import flash.events.Event;    import flash.events.IOErrorEvent;    import flash.events.MouseEvent;    import flash.events.ProgressEvent;    import flash.media.Sound;    import flash.media.SoundChannel;    import flash.net.URLRequest;        /**     * @author bram     */	[SWF( backgroundColor='0xffffff', width='900', height='200')]    public class Flash10Player extends Sprite     {    	private var _soundDisplay:SoundDisplay;    	private var _baseUrl:String, _waveformUrl:String, _spectralUrl:String, _soundUrl:String;    	private var _sound:Sound;    	private var _soundChannel : SoundChannel;        public function Flash10Player()        {        	_baseUrl = "../media/";        	_waveformUrl = "waveform.png";        	_spectralUrl = "spectral.jpg";        	_soundUrl = "preview.mp3";        	        	buildUi();			addEventListener(MouseEvent.CLICK, loadAndPlay);			addEventListener(Event.ENTER_FRAME, onEnterFrame);        }                private function buildUi():void        {			_soundDisplay = new SoundDisplay(900, 149, _baseUrl + _waveformUrl, _baseUrl + _spectralUrl);			_soundDisplay.x = 5;			_soundDisplay.y = 5;			addChild(_soundDisplay);        }                private function loadAndPlay(e:MouseEvent):void        {        	if (!_sound)        	{	            _soundDisplay.startLoading();	            _soundDisplay.startPlaying();	            	            _sound = new Sound(new URLRequest(_baseUrl + _soundUrl));	            _sound.addEventListener(Event.COMPLETE, completeHandler);	            _sound.addEventListener(IOErrorEvent.IO_ERROR, ioErrorHandler);	            _sound.addEventListener(ProgressEvent.PROGRESS, progressHandler);		            _soundChannel = _sound.play(0);        	}        	else        	{        		_soundChannel.stop();        		_soundChannel = _sound.play(0);        	}        }                private function onEnterFrame(event:Event):void        {        	if (_sound && _soundChannel)        	{                _soundDisplay.setPlaying(_soundChannel.position / _sound.length);            }        }                private function completeHandler(event:Event):void        {        	_soundDisplay.setLoading(1);        }        private function progressHandler(event:ProgressEvent):void {            _soundDisplay.setLoading(_sound.bytesLoaded / _sound.bytesTotal);        }        private function ioErrorHandler(event:Event):void {            trace("ioErrorHandler: " + event);        }    }}