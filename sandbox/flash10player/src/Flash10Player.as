package  {    import ui.IButton;    import ui.IButtonObserver;    import ui.ImageButton;    import ui.SoundDisplay;    import flash.display.Bitmap;    import flash.display.Sprite;    import flash.events.MouseEvent;            /**     * @author bram     */    [SWF( backgroundColor='0xffffff', width='900', height='200')]    public class Flash10Player extends Sprite implements ISoundManagerObserver, IButtonObserver    {        private var _soundDisplay : SoundDisplay;        private var _baseUrl : String, _waveformUrl : String, _spectralUrl : String, _soundUrl : String;        private var _sound : BasicSoundManager;        [Embed(source='../media/play.png')]        private var PlayButtonImage : Class;        private var playButton : ImageButton;        [Embed(source='../media/stop.png')]        private var StopButtonImage : Class;        private var stopButton : ImageButton;                [Embed(source='../media/spectral.png')]        private var SpectralButtonImage : Class;        private var spectralButton : ImageButton;        public function Flash10Player()        {            _baseUrl = "../media/";            _waveformUrl = "waveform.png";            _spectralUrl = "spectral.jpg";            _soundUrl = "preview.mp3";            buildUi();        }        public function onButtonDown(button : IButton) : void        {            switch (button)            {                case playButton:                    {	                    if (!_sound)			            {			                _sound = new BasicSoundManager(_baseUrl + _soundUrl);			                _sound.addSoundManagerObserver(this);			            }			        				        	_sound.play();	                    break;	        		}	        	case stopButton:		        	{		        		if (_sound)		        			_sound.stop();		        		break;		        	}		        case spectralButton:		        	{		        		if (_soundDisplay)		        			_soundDisplay.swapDisplayImage();		        	}            }        }                public function onButtonUp(button:IButton):void        {            switch (button)            {                case playButton:                    {		        		if (_sound)		                	_sound.pause();	                    break;	        		}		        case spectralButton:		        	{		        		if (_soundDisplay)		        			_soundDisplay.swapDisplayImage();		        	}            }        }        private function buildUi() : void        {            _soundDisplay = new SoundDisplay(900, 149, _baseUrl + _waveformUrl, _baseUrl + _spectralUrl);            addChild(_soundDisplay);            playButton = new ImageButton(new PlayButtonImage(), true);            playButton.addButtonObserver(this);            playButton.x = 0;            playButton.y = 149-11;            addChild(playButton);        	            stopButton = new ImageButton(new StopButtonImage());            stopButton.addButtonObserver(this);            stopButton.x = 30;            stopButton.y = 149-11;            addChild(stopButton);            spectralButton = new ImageButton(new SpectralButtonImage(), true);            spectralButton.addButtonObserver(this);            spectralButton.x = 90;            spectralButton.y = 149-11;            addChild(spectralButton);        }        public function onSoundManagerLoading( soundManager : ISoundManager, progress : Number ) : void        {            _soundDisplay.setLoading(progress);        };        public function onSoundManagerError( soundManager : ISoundManager, errorMsg : String ) : void        {        	// TODO: gracefully display fail message. Epic fail!        };        public function onSoundManagerLoaded(soundManager : ISoundManager) : void        {            _soundDisplay.setLoading(1.0);        };        public function onSoundManagerPlay(soundManager : ISoundManager) : void        {        	// TODO: toggle play button to pause        };        public function onSoundManagerPlaying( soundManager : ISoundManager, position : Number ) : void        {            _soundDisplay.setPlaying(position);        };        public function onSoundManagerPause(soundManager : ISoundManager) : void        {        	// TODO: toggle play button to play        };        public function onSoundManagerStop(soundManager : ISoundManager) : void        {        	// TODO: toggle play button to play            playButton.setState(false);        };    }}