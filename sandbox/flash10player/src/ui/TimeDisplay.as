package ui {    import flash.display.Bitmap;    import flash.display.BitmapData;    import flash.display.Sprite;    import flash.events.MouseEvent;    import flash.geom.Rectangle;        /**     * @author bram     */    public class TimeDisplay extends Sprite     {    	private var _duration : Number;    	private var _previousTime : Number;        private var _timeBitmap:Bitmap;        private var _inverseTime : Boolean;    	    	public function TimeDisplay(duration:Number, width:int=200, height:int=16)        {        	buttonMode = true;        		        _timeBitmap = new Bitmap(new BitmapData( width, height, true, 0x00ff0000));            addChild(_timeBitmap);                        addEventListener(MouseEvent.MOUSE_DOWN, onTimeDisplayClicked);                        _inverseTime = true;            _duration = duration;            _previousTime = 0;            update();        }                public function get duration() : Number        {        	return _duration;        }                public function set duration(duration:Number):void        {        	_duration = duration;        	update();        }                public function update(time:Number = -1):void        {        	if (time < 0)        		time = _previousTime;        				var display:String;        	if (_inverseTime)        		display = "-" + TimeDisplay.timeToString(_duration - time);        	else        		display = TimeDisplay.timeToString(time);        	        	// clear the bitmap            _timeBitmap.bitmapData.fillRect(new Rectangle(0, 0, _timeBitmap.width, _timeBitmap.height), 0x00000000);                        // draw the text            DText.draw(_timeBitmap.bitmapData, display, _timeBitmap.width, 0, DText.RIGHT);                        _previousTime = time;        }                public function onTimeDisplayClicked(e:MouseEvent):void        {        	_inverseTime = !_inverseTime;        	update();        	e.stopImmediatePropagation();        }        public static function timeToString(time:Number):String        {        	var minutes:int = time/(60*1000);        	time -= minutes*60*1000;        	var seconds:int = time/(1000);        	time -= seconds*1000;        	var miliseconds:int = time;        	var display:String = minutes.toString() + ":";        	if (seconds < 10)        		display += "0";        	display += seconds.toString() + ":";        	        	if (miliseconds < 10)        		display += "00";        	else if (miliseconds < 100)        		display += "0";			display += miliseconds.toString();						return display;        	        }    }}